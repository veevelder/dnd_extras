Macro:
Name: Toggle Combat
Image: systems/dnd5e/icons/skills/weapon_01.jpg
Scope: global
Type: script
Command:
(async () => {
	if (game.combat) {
		async function endCombat() {
			//get exp
			let exp = 0;
			let defeated = [];
			game.combat.combatants.filter(x => x.players.length == 0).filter(x => x.css.includes("defeated")).forEach(function(a) { exp += a.actor.data.data.details.xp.value; defeated.push(a.name); });
			exp = Math.round(exp / game.combat.combatants.filter(x => x.players.length > 0).length);
			game.playlists.entities.find(data => data.name == "Combat").stopAll();
			game.combat.delete();
			if (exp != 0 ) {
				ChatMessage.create({
					user: game.user._id,
					content: "<p>For defeating <strong>" + defeated.join(", ") + "</strong> each of you get <strong>" + exp + "</strong> experience!</p>",
					type: CONST.CHAT_MESSAGE_TYPES.OTHER
				}, {});
			}
			if(CONFIG["OldPlaylist"]) {
				CONFIG["OldPlaylist"].forEach(function(a) {a.playAll()});
				CONFIG["OldPlaylist"] = null;
			}
		}
		let d = Dialog.confirm({
		  title: "End Combat Encounter?",
		  content: "<p>End this combat encounter and empty the turn tracker?</p>",
		  yes: () => endCombat()
		});
	}
	else {
		if (canvas.tokens.controlled.length === 0) {
			ui.notifications.error("You must select at least one or more tokens on the map before starting combat.");
		}
		else {
			async function start() {
				for (let token of canvas.tokens.controlled) {      
					if (token.inCombat === false){
						await token.toggleCombat().then(() => game.combat.rollAll(null, {rollMode: 'gmroll'}));
					}
				}
			}
			start().then(function() {
				//save the currently playing playlist
				CONFIG["OldPlaylist"] = game.playlists.playing
				async function stopAll() {
					game.playlists.playing.forEach(function(playing) {playing.stopAll()});
				}
				stopAll().then(function() {
					let _combat = game.playlists.entities.find(data => data.name == "Combat");
					let _music = _combat.sounds[Math.floor(Math.random() * _combat.sounds.length)];
					let audio = _combat.audio[_music._id];
					if (!_music.playing) {
						async function load() {
							if (audio.howl.state() !== "loaded")audio.howl.load();
						}
						load().then(function() {
							audio.id = audio.howl.play(audio.id);
							audio.howl.volume(_music.volume * game.settings.get("core", "globalPlaylistVolume"), audio.id);
							audio.howl.loop(_music.repeat, audio.id);
							_music.playing = true;
						});
					}
				});
				game.combat.startCombat();
			});
		}
	}
})();